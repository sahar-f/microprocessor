vendor_name = ModelSim
source_file = 1, C:/Users/Sahar/Desktop/CME341_Assignments/microprocessor/program_sequencer/program_sequencer.sv
source_file = 1, C:/Users/Sahar/Desktop/CME341_Assignments/microprocessor/program_sequencer/db/program_sequencer.cbx.xml
design_name = program_sequencer
instance = comp, \pm_addr[0]~output , pm_addr[0]~output, program_sequencer, 1
instance = comp, \pm_addr[1]~output , pm_addr[1]~output, program_sequencer, 1
instance = comp, \pm_addr[2]~output , pm_addr[2]~output, program_sequencer, 1
instance = comp, \pm_addr[3]~output , pm_addr[3]~output, program_sequencer, 1
instance = comp, \pm_addr[4]~output , pm_addr[4]~output, program_sequencer, 1
instance = comp, \pm_addr[5]~output , pm_addr[5]~output, program_sequencer, 1
instance = comp, \pm_addr[6]~output , pm_addr[6]~output, program_sequencer, 1
instance = comp, \pm_addr[7]~output , pm_addr[7]~output, program_sequencer, 1
instance = comp, \jmp~input , jmp~input, program_sequencer, 1
instance = comp, \jmp_nz~input , jmp_nz~input, program_sequencer, 1
instance = comp, \dont_jmp~input , dont_jmp~input, program_sequencer, 1
instance = comp, \pm_addr[3]~0 , pm_addr[3]~0, program_sequencer, 1
instance = comp, \sync_reset~input , sync_reset~input, program_sequencer, 1
instance = comp, \clk~input , clk~input, program_sequencer, 1
instance = comp, \clk~inputclkctrl , clk~inputclkctrl, program_sequencer, 1
instance = comp, \Add0~0 , Add0~0, program_sequencer, 1
instance = comp, \Add0~2 , Add0~2, program_sequencer, 1
instance = comp, \pc~1 , pc~1, program_sequencer, 1
instance = comp, \pc[1] , pc[1], program_sequencer, 1
instance = comp, \pc~5 , pc~5, program_sequencer, 1
instance = comp, \pc~4 , pc~4, program_sequencer, 1
instance = comp, \Add0~4 , Add0~4, program_sequencer, 1
instance = comp, \pc~2 , pc~2, program_sequencer, 1
instance = comp, \pc[2] , pc[2], program_sequencer, 1
instance = comp, \Add0~6 , Add0~6, program_sequencer, 1
instance = comp, \Add0~8 , Add0~8, program_sequencer, 1
instance = comp, \jmp_addr[0]~input , jmp_addr[0]~input, program_sequencer, 1
instance = comp, \pm_addr[4]$latch~0 , pm_addr[4]$latch~0, program_sequencer, 1
instance = comp, \pc~6 , pc~6, program_sequencer, 1
instance = comp, \pc[4] , pc[4], program_sequencer, 1
instance = comp, \Add0~10 , Add0~10, program_sequencer, 1
instance = comp, \jmp_addr[1]~input , jmp_addr[1]~input, program_sequencer, 1
instance = comp, \pm_addr[5]$latch~0 , pm_addr[5]$latch~0, program_sequencer, 1
instance = comp, \pc~7 , pc~7, program_sequencer, 1
instance = comp, \pc[5] , pc[5], program_sequencer, 1
instance = comp, \Add0~12 , Add0~12, program_sequencer, 1
instance = comp, \jmp_addr[2]~input , jmp_addr[2]~input, program_sequencer, 1
instance = comp, \pm_addr[6]$latch~0 , pm_addr[6]$latch~0, program_sequencer, 1
instance = comp, \pc~8 , pc~8, program_sequencer, 1
instance = comp, \pc[6] , pc[6], program_sequencer, 1
instance = comp, \Add0~14 , Add0~14, program_sequencer, 1
instance = comp, \jmp_addr[3]~input , jmp_addr[3]~input, program_sequencer, 1
instance = comp, \pc~9 , pc~9, program_sequencer, 1
instance = comp, \pc~10 , pc~10, program_sequencer, 1
instance = comp, \pc[7] , pc[7], program_sequencer, 1
instance = comp, \Equal0~0 , Equal0~0, program_sequencer, 1
instance = comp, \pc~3 , pc~3, program_sequencer, 1
instance = comp, \pc[3] , pc[3], program_sequencer, 1
instance = comp, \Equal0~1 , Equal0~1, program_sequencer, 1
instance = comp, \pc~0 , pc~0, program_sequencer, 1
instance = comp, \pc[0] , pc[0], program_sequencer, 1
instance = comp, \pm_addr[0]$latch~0 , pm_addr[0]$latch~0, program_sequencer, 1
instance = comp, \pm_addr[1]$latch~0 , pm_addr[1]$latch~0, program_sequencer, 1
instance = comp, \pm_addr[2]$latch~0 , pm_addr[2]$latch~0, program_sequencer, 1
instance = comp, \pm_addr[3]$latch~0 , pm_addr[3]$latch~0, program_sequencer, 1
instance = comp, \pm_addr[7]$latch~0 , pm_addr[7]$latch~0, program_sequencer, 1
design_name = hard_block
instance = comp, \~ALTERA_ASDO_DATA1~~ibuf , ~ALTERA_ASDO_DATA1~~ibuf, hard_block, 1
instance = comp, \~ALTERA_FLASH_nCE_nCSO~~ibuf , ~ALTERA_FLASH_nCE_nCSO~~ibuf, hard_block, 1
instance = comp, \~ALTERA_DATA0~~ibuf , ~ALTERA_DATA0~~ibuf, hard_block, 1
