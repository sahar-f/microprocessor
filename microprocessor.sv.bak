module microprocessor(
	input clk, reset,
	input[3:0] i_pins,
	output wire[3:0] o_reg
);

wire jump, conditional_jump, zero_flag;

wire[3:0] LS_nibble_of_ir;

wire[7:0] pm_address;

/*****************
MAKE SYNC_RESET
******************/

reg sync_reset;
always @ (posedge clk)
	sync_reset = reset;
	
/***********************
INSTANTIATIONS
************************/

program_sequencer prog_sequencer(
	.clk(clk),
	.sync_reset(sync_reset),
	.jmp(jump),
	.jmp_nz(conditional_jump),
	.jmp_addr(LS_nibble_ir),
	.dont_jmp(zero_flag),
	.pm_addr(pm_address)
);

endmodule

program_memory prog_mem(.clk(clk), .addr(pm_address), .data(pm_data));
